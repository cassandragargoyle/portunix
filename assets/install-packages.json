{
  "version": "1.1",
  "packages": {
    "java": {
      "name": "Java (OpenJDK)",
      "description": "Java Development Kit from Eclipse Adoptium",
      "platforms": {
        "windows": {
          "type": "msi",
          "variants": {
            "8": {
              "version": "8u432b06",
              "urls": {
                "x64": "https://github.com/adoptium/temurin8-binaries/releases/download/jdk-8u432%2Bb06/OpenJDK8U-jdk_x64_windows_hotspot_8u432b06.msi",
                "x86": "https://github.com/adoptium/temurin8-binaries/releases/download/jdk-8u432%2Bb06/OpenJDK8U-jdk_x86_windows_hotspot_8u432b06.msi"
              },
              "install_path": "${ProgramFiles}/Eclipse Adoptium/jdk-8u432b06-hotspot"
            },
            "11": {
              "version": "11.0.25_9",
              "urls": {
                "x64": "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.25%2B9/OpenJDK11U-jdk_x64_windows_hotspot_11.0.25_9.msi",
                "x86": "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.25%2B9/OpenJDK11U-jdk_x86_windows_hotspot_11.0.25_9.msi"
              },
              "install_path": "${ProgramFiles}/Eclipse Adoptium/jdk-11.0.25.9-hotspot"
            },
            "17": {
              "version": "17.0.13_11", 
              "urls": {
                "x64": "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_x64_windows_hotspot_17.0.13_11.msi",
                "x86": "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_x86_windows_hotspot_17.0.13_11.msi"
              },
              "install_path": "${ProgramFiles}/Eclipse Adoptium/jdk-17.0.13.11-hotspot"
            },
            "21": {
              "version": "21.0.5_11",
              "urls": {
                "x64": "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_x64_windows_hotspot_21.0.5_11.msi",
                "x86": "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_x86_windows_hotspot_21.0.5_11.msi"
              },
              "install_path": "${ProgramFiles}/Eclipse Adoptium/jdk-21.0.5.11-hotspot"
            }
          },
          "install_args": ["ADDLOCAL=ALL", "/quiet"],
          "verification": {
            "command": "java -version",
            "expected_exit_code": 0
          },
          "environment": {
            "JAVA_HOME": "${install_path}",
            "PATH_APPEND": "${install_path}/bin"
          }
        },
        "linux": {
          "type": "tar.gz",
          "variants": {
            "8": {
              "version": "8u432b06",
              "urls": {
                "x64": "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u432-b06/OpenJDK8U-jdk_x64_linux_hotspot_8u432b06.tar.gz",
                "arm64": "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u432-b06/OpenJDK8U-jdk_aarch64_linux_hotspot_8u432b06.tar.gz"
              },
              "extract_to": "/opt/java/jdk-8u432b06",
              "post_install": [
                "sudo update-alternatives --install /usr/bin/java java /opt/java/jdk-8u432b06/bin/java 1",
                "sudo update-alternatives --install /usr/bin/javac javac /opt/java/jdk-8u432b06/bin/javac 1"
              ]
            },
            "11": {
              "version": "11.0.25_9",
              "urls": {
                "x64": "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.25%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.25_9.tar.gz",
                "arm64": "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.25%2B9/OpenJDK11U-jdk_aarch64_linux_hotspot_11.0.25_9.tar.gz"
              },
              "extract_to": "/opt/java/jdk-11.0.25+9",
              "post_install": [
                "sudo update-alternatives --install /usr/bin/java java /opt/java/jdk-11.0.25+9/bin/java 1",
                "sudo update-alternatives --install /usr/bin/javac javac /opt/java/jdk-11.0.25+9/bin/javac 1"
              ]
            },
            "17": {
              "version": "17.0.13_11",
              "urls": {
                "x64": "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_x64_linux_hotspot_17.0.13_11.tar.gz",
                "arm64": "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.13%2B11/OpenJDK17U-jdk_aarch64_linux_hotspot_17.0.13_11.tar.gz"
              },
              "extract_to": "/opt/java/jdk-17.0.13+11",
              "post_install": [
                "sudo update-alternatives --install /usr/bin/java java /opt/java/jdk-17.0.13+11/bin/java 1",
                "sudo update-alternatives --install /usr/bin/javac javac /opt/java/jdk-17.0.13+11/bin/javac 1"
              ]
            },
            "21": {
              "version": "21.0.5_11",
              "urls": {
                "x64": "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_x64_linux_hotspot_21.0.5_11.tar.gz",
                "arm64": "https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.5%2B11/OpenJDK21U-jdk_aarch64_linux_hotspot_21.0.5_11.tar.gz"
              },
              "extract_to": "/opt/java/jdk-21.0.5+11",
              "post_install": [
                "sudo update-alternatives --install /usr/bin/java java /opt/java/jdk-21.0.5+11/bin/java 1",
                "sudo update-alternatives --install /usr/bin/javac javac /opt/java/jdk-21.0.5+11/bin/javac 1"
              ]
            }
          },
          "verification": {
            "command": "java -version",
            "expected_exit_code": 0
          },
          "environment": {
            "JAVA_HOME": "${extract_to}",
            "PATH_APPEND": "${extract_to}/bin"
          }
        }
      },
      "default_variant": "21"
    },
    "python": {
      "name": "Python",
      "description": "Python programming language",
      "platforms": {
        "windows": {
          "type": "zip",
          "variants": {
            "embeddable": {
              "version": "3.13.6",
              "urls": {
                "x64": "https://www.python.org/ftp/python/3.13.6/python-3.13.6-embed-amd64.zip",
                "x86": "https://www.python.org/ftp/python/3.13.6/python-3.13.6-embed-win32.zip"
              },
              "extract_to": "C:/PortablePython",
              "post_install": [
                "echo import sys >> python313._pth",
                "echo site-packages >> python313._pth"
              ]
            },
            "full": {
              "version": "3.13.6",
              "urls": {
                "x64": "https://www.python.org/ftp/python/3.13.6/python-3.13.6-amd64.exe",
                "x86": "https://www.python.org/ftp/python/3.13.6/python-3.13.6.exe"
              },
              "install_args": ["/quiet", "InstallAllUsers=1", "PrependPath=1"]
            }
          },
          "verification": {
            "command": "python --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "apt",
          "variants": {
            "default": {
              "version": "3.13",
              "packages": ["python3", "python3-pip", "python3-venv"],
              "post_install": [
                "sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1"
              ]
            },
            "dev": {
              "version": "3.13",
              "packages": ["python3", "python3-pip", "python3-venv", "python3-dev", "build-essential"],
              "post_install": [
                "sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1"
              ]
            }
          },
          "verification": {
            "command": "python --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "embeddable"
    },
    "vscode": {
      "name": "Visual Studio Code",
      "description": "Source code editor from Microsoft",
      "platforms": {
        "windows": {
          "type": "exe",
          "variants": {
            "user": {
              "version": "latest",
              "urls": {
                "x64": "https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user",
                "x86": "https://code.visualstudio.com/sha/download?build=stable&os=win32-user"
              },
              "install_args": ["/verysilent", "/mergetasks=!runcode"]
            },
            "system": {
              "version": "latest", 
              "urls": {
                "x64": "https://code.visualstudio.com/sha/download?build=stable&os=win32-x64",
                "x86": "https://code.visualstudio.com/sha/download?build=stable&os=win32"
              },
              "install_args": ["/verysilent", "/mergetasks=!runcode"]
            }
          },
          "verification": {
            "command": "code --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "deb",
          "variants": {
            "stable": {
              "version": "latest",
              "urls": {
                "x64": "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64",
                "arm64": "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-arm64"
              },
              "post_install": [
                "sudo dpkg -i ${downloaded_file}",
                "sudo apt-get install -f"
              ]
            },
            "snap": {
              "version": "latest",
              "packages": ["code"],
              "type": "snap",
              "install_args": ["--classic"]
            }
          },
          "verification": {
            "command": "code --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "user"
    },
    "go": {
      "name": "Go Programming Language",
      "description": "Go programming language from Google",
      "platforms": {
        "windows": {
          "type": "msi",
          "variants": {
            "latest": {
              "version": "1.23.4",
              "urls": {
                "x64": "https://go.dev/dl/go1.23.4.windows-amd64.msi",
                "x86": "https://go.dev/dl/go1.23.4.windows-386.msi"
              },
              "install_path": "${ProgramFiles}/Go"
            }
          },
          "install_args": ["/quiet"],
          "verification": {
            "command": "go version",
            "expected_exit_code": 0
          },
          "environment": {
            "GOROOT": "${install_path}",
            "PATH_APPEND": "${install_path}/bin"
          }
        },
        "linux": {
          "type": "tar.gz",
          "variants": {
            "latest": {
              "version": "1.23.4",
              "urls": {
                "x64": "https://go.dev/dl/go1.23.4.linux-amd64.tar.gz",
                "arm64": "https://go.dev/dl/go1.23.4.linux-arm64.tar.gz"
              },
              "extract_to": "/usr/local",
              "post_install": [
                "sudo tar -C /usr/local -xzf ${downloaded_file}",
                "echo 'export PATH=$PATH:/usr/local/go/bin' | sudo tee /etc/profile.d/go.sh"
              ]
            }
          },
          "verification": {
            "command": "go version",
            "expected_exit_code": 0
          },
          "environment": {
            "GOROOT": "/usr/local/go",
            "PATH_APPEND": "/usr/local/go/bin"
          }
        }
      },
      "default_variant": "latest"
    },
    "chocolatey": {
      "name": "Chocolatey Package Manager",
      "description": "Package manager for Windows",
      "platforms": {
        "windows": {
          "type": "powershell",
          "variants": {
            "latest": {
              "version": "latest",
              "install_script": "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))",
              "post_install": [
                "refreshenv"
              ]
            }
          },
          "verification": {
            "command": "choco --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "latest"
    },
    "chrome": {
      "name": "Google Chrome",
      "description": "Fast, secure web browser built for the modern web",
      "category": "browsers",
      "platforms": {
        "windows": {
          "type": "msi",
          "variants": {
            "stable": {
              "version": "latest",
              "urls": {
                "x64": "https://dl.google.com/chrome/install/googlechromestandaloneenterprise64.msi",
                "x86": "https://dl.google.com/chrome/install/googlechromestandaloneenterprise.msi"
              }
            },
            "beta": {
              "version": "latest-beta",
              "urls": {
                "x64": "https://dl.google.com/chrome/install/beta/googlechromebetastandaloneenterprise64.msi",
                "x86": "https://dl.google.com/chrome/install/beta/googlechromebetastandaloneenterprise.msi"
              }
            },
            "dev": {
              "version": "latest-dev",
              "urls": {
                "x64": "https://dl.google.com/chrome/install/dev/googlechromedevstandaloneenterprise64.msi",
                "x86": "https://dl.google.com/chrome/install/dev/googlechromedevstandaloneenterprise.msi"
              }
            }
          },
          "install_args": ["/quiet", "/norestart"],
          "verification": {
            "command": "chrome --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "repository",
          "variants": {
            "ubuntu": {
              "version": "latest",
              "distributions": ["ubuntu", "kubuntu", "lubuntu", "xubuntu"],
              "supported_versions": ["20.04", "22.04", "24.04"],
              "repository_setup": [
                "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg",
                "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] https://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list",
                "sudo apt-get update"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["deb-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "debian": {
              "version": "latest",
              "distributions": ["debian"],
              "supported_versions": ["11", "12"],
              "repository_setup": [
                "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg",
                "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] https://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list",
                "sudo apt-get update"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["deb-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "mint": {
              "version": "latest",
              "distributions": ["mint", "linuxmint"],
              "supported_versions": ["21", "21.1", "21.2", "21.3"],
              "repository_setup": [
                "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg",
                "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] https://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list",
                "sudo apt-get update"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["deb-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "elementary": {
              "version": "latest",
              "distributions": ["elementary"],
              "supported_versions": ["7.0", "7.1"],
              "repository_setup": [
                "wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-chrome.gpg",
                "echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome.gpg] https://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list",
                "sudo apt-get update"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["deb-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "fedora": {
              "version": "latest",
              "distributions": ["fedora"],
              "supported_versions": ["38", "39", "40"],
              "repository_setup": [
                "sudo dnf install -y fedora-workstation-repositories",
                "sudo dnf config-manager --set-enabled google-chrome",
                "sudo rpm --import https://dl.google.com/linux/linux_signing_key.pub"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["rpm-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "rocky": {
              "version": "latest",
              "distributions": ["rocky", "almalinux", "centos"],
              "supported_versions": ["8", "9"],
              "repository_setup": [
                "sudo dnf install -y dnf-plugins-core",
                "sudo dnf config-manager --add-repo https://dl.google.com/linux/chrome/rpm/stable/x86_64",
                "sudo rpm --import https://dl.google.com/linux/linux_signing_key.pub"
              ],
              "packages": ["google-chrome-stable"],
              "fallback_variants": ["rpm-direct", "snap"],
              "fallback_strategy": "auto_with_confirmation"
            },
            "deb-direct": {
              "version": "latest",
              "type": "deb",
              "distributions": ["universal"],
              "urls": {
                "x64": "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
              }
            },
            "rpm-direct": {
              "version": "latest",
              "type": "rpm",
              "distributions": ["universal"],
              "urls": {
                "x64": "https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm"
              }
            },
            "snap": {
              "version": "latest",
              "type": "snap",
              "distributions": ["universal"],
              "packages": ["chromium"]
            }
          },
          "verification": {
            "command": "google-chrome --version || chromium --version",
            "expected_exit_code": 0
          }
        },
        "darwin": {
          "type": "direct_download",
          "variants": {
            "stable": {
              "version": "latest",
              "url": "https://dl.google.com/chrome/mac/universal/stable/GGRO/googlechrome.dmg",
              "extract": false,
              "install_script": "hdiutil mount googlechrome.dmg && cp -r '/Volumes/Google Chrome/Google Chrome.app' /Applications/ && hdiutil unmount '/Volumes/Google Chrome'",
              "requires_sudo": false
            }
          },
          "verification": {
            "command": "/Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "stable"
    },
    "mvn": {
      "name": "Apache Maven",
      "description": "Build automation and project management tool for Java projects",
      "platforms": {
        "windows": {
          "type": "zip",
          "variants": {
            "3.9.9": {
              "version": "3.9.9",
              "urls": {
                "x64": "https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.zip"
              },
              "extract_to": "C:/Program Files/Apache/Maven",
              "post_install": [
                "echo Maven extracted successfully"
              ]
            },
            "latest": {
              "version": "3.9.9",
              "urls": {
                "x64": "https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.zip"
              },
              "extract_to": "C:/Program Files/Apache/Maven",
              "post_install": [
                "echo Maven extracted successfully"
              ]
            }
          },
          "verification": {
            "command": "mvn --version",
            "expected_exit_code": 0
          },
          "environment": {
            "M2_HOME": "${extract_to}/apache-maven-3.9.9",
            "MAVEN_HOME": "${extract_to}/apache-maven-3.9.9",
            "PATH_APPEND": "${extract_to}/apache-maven-3.9.9/bin"
          }
        },
        "linux": {
          "type": "tar.gz",
          "variants": {
            "3.9.9": {
              "version": "3.9.9",
              "urls": {
                "x64": "https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz"
              },
              "extract_to": "/opt/maven",
              "post_install": [
                "sudo mkdir -p /opt/maven",
                "sudo tar -C /opt/maven -xzf ${downloaded_file} --strip-components=1",
                "echo 'export M2_HOME=/opt/maven' | sudo tee /etc/profile.d/maven.sh",
                "echo 'export MAVEN_HOME=/opt/maven' | sudo tee -a /etc/profile.d/maven.sh", 
                "echo 'export PATH=$PATH:/opt/maven/bin' | sudo tee -a /etc/profile.d/maven.sh",
                "sudo chmod +x /etc/profile.d/maven.sh"
              ]
            },
            "latest": {
              "version": "3.9.9",
              "urls": {
                "x64": "https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz"
              },
              "extract_to": "/opt/maven",
              "post_install": [
                "sudo mkdir -p /opt/maven",
                "sudo tar -C /opt/maven -xzf ${downloaded_file} --strip-components=1",
                "echo 'export M2_HOME=/opt/maven' | sudo tee /etc/profile.d/maven.sh",
                "echo 'export MAVEN_HOME=/opt/maven' | sudo tee -a /etc/profile.d/maven.sh",
                "echo 'export PATH=$PATH:/opt/maven/bin' | sudo tee -a /etc/profile.d/maven.sh",
                "sudo chmod +x /etc/profile.d/maven.sh"
              ]
            },
            "apt": {
              "version": "latest",
              "type": "apt",
              "packages": ["maven"],
              "post_install": []
            }
          },
          "verification": {
            "command": "mvn --version",
            "expected_exit_code": 0
          },
          "environment": {
            "M2_HOME": "/opt/maven",
            "MAVEN_HOME": "/opt/maven",
            "PATH_APPEND": "/opt/maven/bin"
          }
        }
      },
      "default_variant": "latest"
    },
    "winget": {
      "name": "Windows Package Manager",
      "description": "Microsoft's official package manager for Windows",
      "platforms": {
        "windows": {
          "type": "powershell",
          "variants": {
            "github": {
              "version": "latest",
              "install_script": "Write-Host 'Checking if winget is already installed...'; try { $wingetCheck = winget --version 2>$null; if ($wingetCheck) { Write-Host \"✓ Winget is already installed (version: $wingetCheck)\"; Write-Host 'No installation needed.'; exit 0 } } catch { Write-Host 'Winget not found, proceeding with installation...' }; $cacheDir = 'C:\\Portunix\\.cache'; $winget = \"$cacheDir\\Microsoft.DesktopAppInstaller.msixbundle\"; if (Test-Path $winget) { Write-Host 'Using cached winget installer...'; Write-Host 'Installing winget with compatible VCLibs (14.0.33321.0)...'; try { $progressPreference = 'SilentlyContinue'; Write-Host 'Installing cached VCLibs 14.0.33321.0...'; $vcLibs = \"$cacheDir\\Microsoft.VCLibs.140.00.UWPDesktop_latest_x64.appx\"; if (Test-Path $vcLibs) { Add-AppxPackage $vcLibs -ErrorAction Stop; Write-Host '✓ VCLibs 14.0.33321.0 installed successfully!'; } else { Write-Host 'Warning: VCLibs not found in cache'; }; Write-Host 'Installing older compatible winget...'; Add-AppxPackage $winget -ErrorAction Stop; Write-Host '✓ Winget installed successfully with compatible VCLibs!' } catch { Write-Host \"Installation error: $_\"; Write-Host 'Error details:'; Write-Host $_.Exception.Message; Write-Host 'Trying fallback method with older winget version...'; try { Write-Host 'Downloading older winget version (v1.6.3482)...'; $olderWingetUrl = 'https://github.com/microsoft/winget-cli/releases/download/v1.6.3482/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle'; $tempWinget = Join-Path $env:TEMP 'Microsoft.DesktopAppInstaller_old.msixbundle'; Invoke-WebRequest -Uri $olderWingetUrl -OutFile $tempWinget; Write-Host 'Installing older winget version...'; Add-AppxPackage $tempWinget -ErrorAction Stop; Remove-Item $tempWinget -ErrorAction SilentlyContinue; Write-Host '✓ Older winget installed successfully!' } catch { throw \"Both new and old winget installation failed: $_\" } } } else { Write-Host 'Cache not found, downloading compatible winget from GitHub...'; Write-Host 'Downloading older winget version (v1.6.3482) that works with VCLibs 14.0.33321.0...'; $olderWingetUrl = 'https://github.com/microsoft/winget-cli/releases/download/v1.6.3482/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.msixbundle'; $tempFile = Join-Path $env:TEMP 'Microsoft.DesktopAppInstaller.msixbundle'; Invoke-WebRequest -Uri $olderWingetUrl -OutFile $tempFile; Add-AppxPackage $tempFile; Remove-Item $tempFile; Write-Host 'Installation completed!' }",
              "post_install": [
                "winget --info"
              ]
            },
            "register": {
              "version": "latest",
              "install_script": "Add-AppxPackage -RegisterByFamilyName -MainPackage Microsoft.DesktopAppInstaller_8wekyb3d8bbwe",
              "post_install": [
                "winget --info"
              ]
            }
          },
          "verification": {
            "command": "winget --version",
            "expected_exit_code": 0
          }
        },
        "windows_sandbox": {
          "type": "powershell",
          "variants": {
            "sandbox": {
              "version": "latest",
              "install_script": "$progressPreference = 'silentlyContinue'\nWrite-Host \"Installing WinGet PowerShell module from PSGallery...\"\nInstall-PackageProvider -Name NuGet -Force | Out-Null\nInstall-Module -Name Microsoft.WinGet.Client -Force -Repository PSGallery | Out-Null\nWrite-Host \"Using Repair-WinGetPackageManager cmdlet to bootstrap WinGet...\"\nRepair-WinGetPackageManager -AllUsers\nWrite-Host \"Done.\"",
              "post_install": [
                "winget --info"
              ]
            }
          },
          "verification": {
            "command": "winget --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "github"
    },
    "claude-code": {
      "name": "Claude Code",
      "description": "Anthropic's official CLI for Claude AI assistant",
      "platforms": {
        "windows": {
          "type": "powershell",
          "variants": {
            "npm": {
              "version": "latest",
              "install_script": "Write-Host 'Checking for Node.js and npm...'; try { $nodeVersion = node --version 2>$null; $npmVersion = npm --version 2>$null; Write-Host \"✓ Node.js $nodeVersion and npm $npmVersion found\"; } catch { Write-Host '❌ Node.js/npm not found. Installing Node.js first...'; iwr -useb https://nodejs.org/dist/v20.11.0/node-v20.11.0-x64.msi -outfile node.msi; Start-Process msiexec.exe -Wait -ArgumentList '/I node.msi /quiet'; Remove-Item node.msi; }; Write-Host 'Installing Claude Code via npm...'; npm install -g @anthropic-ai/claude-code; Write-Host 'Installation completed!'",
              "post_install": [
                "claude --version"
              ]
            },
            "curl": {
              "version": "latest",
              "install_script": "iwr -useb https://claude.ai/cli/install.sh | iex",
              "post_install": [
                "claude --version"
              ]
            }
          },
          "verification": {
            "command": "claude --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "apt",
          "variants": {
            "npm": {
              "version": "latest",
              "packages": ["nodejs", "npm"],
              "post_install": [
                "npm install -g @anthropic-ai/claude-code",
                "claude --version"
              ]
            },
            "curl": {
              "version": "latest",
              "packages": ["curl"],
              "post_install": [
                "curl -fsSL https://claude.ai/cli/install.sh | sh",
                "claude --version"
              ]
            }
          },
          "verification": {
            "command": "claude --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "npm"
    },
    "caddy": {
      "name": "Caddy Web Server",
      "description": "Fast, multi-platform web server with automatic HTTPS",
      "category": "edge-infrastructure",
      "platforms": {
        "windows": {
          "type": "zip",
          "variants": {
            "latest": {
              "version": "2.8.4",
              "urls": {
                "x64": "https://github.com/caddyserver/caddy/releases/download/v2.8.4/caddy_2.8.4_windows_amd64.zip"
              },
              "extract_to": "C:/Program Files/Caddy",
              "post_install": [
                "echo Caddy extracted successfully"
              ]
            }
          },
          "verification": {
            "command": "caddy version",
            "expected_exit_code": 0
          },
          "environment": {
            "PATH_APPEND": "C:/Program Files/Caddy"
          }
        },
        "linux": {
          "type": "tar.gz",
          "variants": {
            "latest": {
              "version": "2.8.4",
              "urls": {
                "x64": "https://github.com/caddyserver/caddy/releases/download/v2.8.4/caddy_2.8.4_linux_amd64.tar.gz",
                "arm64": "https://github.com/caddyserver/caddy/releases/download/v2.8.4/caddy_2.8.4_linux_arm64.tar.gz"
              },
              "extract_to": "/usr/local/bin",
              "post_install": [
                "sudo tar -C /usr/local/bin -xzf ${downloaded_file} caddy",
                "sudo chmod +x /usr/local/bin/caddy",
                "sudo mkdir -p /etc/caddy",
                "sudo mkdir -p /var/log/caddy",
                "sudo groupadd --system caddy 2>/dev/null || true",
                "sudo useradd --system --gid caddy --create-home --home-dir /var/lib/caddy --shell /usr/sbin/nologin --comment 'Caddy web server' caddy 2>/dev/null || true"
              ]
            },
            "apt": {
              "version": "latest",
              "type": "apt",
              "repository_setup": [
                "curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/gpg.key' | sudo gpg --dearmor -o /usr/share/keyrings/caddy-stable-archive-keyring.gpg",
                "curl -1sLf 'https://dl.cloudsmith.io/public/caddy/stable/debian.deb.txt' | sudo tee /etc/apt/sources.list.d/caddy-stable.list",
                "sudo apt-get update"
              ],
              "packages": ["caddy"],
              "post_install": []
            }
          },
          "verification": {
            "command": "caddy version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "latest"
    },
    "wireguard": {
      "name": "WireGuard VPN",
      "description": "Fast, modern, secure VPN tunnel",
      "category": "edge-infrastructure",
      "platforms": {
        "windows": {
          "type": "msi",
          "variants": {
            "latest": {
              "version": "0.5.3",
              "urls": {
                "x64": "https://download.wireguard.com/windows-client/wireguard-installer.exe"
              }
            }
          },
          "install_args": ["/S"],
          "verification": {
            "command": "wg --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "apt",
          "variants": {
            "default": {
              "version": "latest",
              "packages": ["wireguard", "wireguard-tools"],
              "post_install": []
            }
          },
          "verification": {
            "command": "wg --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "latest"
    },
    "fail2ban": {
      "name": "Fail2ban",
      "description": "Intrusion prevention software framework",
      "category": "edge-infrastructure",
      "platforms": {
        "linux": {
          "type": "apt",
          "variants": {
            "default": {
              "version": "latest",
              "packages": ["fail2ban"],
              "post_install": [
                "sudo systemctl enable fail2ban",
                "sudo systemctl start fail2ban"
              ]
            }
          },
          "verification": {
            "command": "fail2ban-client version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "default"
    },
    "ufw": {
      "name": "Uncomplicated Firewall",
      "description": "User-friendly front-end for netfilter",
      "category": "edge-infrastructure",
      "platforms": {
        "linux": {
          "type": "apt",
          "variants": {
            "default": {
              "version": "latest",
              "packages": ["ufw"],
              "post_install": []
            }
          },
          "verification": {
            "command": "ufw version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "default"
    },
    "protoc": {
      "name": "Protocol Buffers Compiler",
      "description": "Language-neutral, platform-neutral serialization protocol compiler",
      "category": "development-tools",
      "platforms": {
        "windows": {
          "type": "zip",
          "variants": {
            "latest": {
              "version": "32.0",
              "urls": {
                "x64": "https://github.com/protocolbuffers/protobuf/releases/download/v32.0/protoc-32.0-win64.zip"
              },
              "extract_to": "C:/Program Files/protoc",
              "post_install": [
                "echo Protocol Buffers Compiler extracted successfully"
              ]
            }
          },
          "verification": {
            "command": "protoc --version",
            "expected_exit_code": 0
          },
          "environment": {
            "PATH_APPEND": "C:/Program Files/protoc/bin"
          }
        },
        "linux": {
          "type": "zip",
          "variants": {
            "latest": {
              "version": "32.0",
              "urls": {
                "x64": "https://github.com/protocolbuffers/protobuf/releases/download/v32.0/protoc-32.0-linux-x86_64.zip",
                "arm64": "https://github.com/protocolbuffers/protobuf/releases/download/v32.0/protoc-32.0-linux-aarch_64.zip"
              },
              "extract_to": "$HOME/.portunix/protoc",
              "post_install": [
                "mkdir -p $HOME/.portunix/protoc",
                "unzip -o ${downloaded_file} -d $HOME/.portunix/protoc",
                "chmod +x $HOME/.portunix/protoc/bin/protoc",
                "echo 'export PATH=$PATH:$HOME/.portunix/protoc/bin' >> $HOME/.bashrc"
              ]
            }
          },
          "verification": {
            "command": "protoc --version",
            "expected_exit_code": 0
          },
          "environment": {
            "PATH_APPEND": "$HOME/.portunix/protoc/bin"
          }
        }
      },
      "default_variant": "latest"
    },
    "powershell": {
      "name": "PowerShell",
      "description": "Cross-platform PowerShell scripting environment from Microsoft",
      "category": "development",
      "platforms": {
        "windows": {
          "type": "powershell",
          "variants": {
            "latest": {
              "version": "7.4.6",
              "install_script": "Write-Host 'Installing PowerShell 7.4.6...'; $url = 'https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/PowerShell-7.4.6-win-x64.msi'; $output = Join-Path $env:TEMP 'PowerShell-7.4.6-win-x64.msi'; Invoke-WebRequest -Uri $url -OutFile $output; Start-Process msiexec.exe -Wait -ArgumentList \"/i $output /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ADD_FILE_CONTEXT_MENU_RUNPOWERSHELL=1\"; Remove-Item $output",
              "post_install": [
                "pwsh --version"
              ]
            }
          },
          "verification": {
            "command": "pwsh --version",
            "expected_exit_code": 0
          }
        },
        "linux": {
          "type": "repository",
          "variants": {
            "ubuntu": {
              "version": "7.4.6",
              "distributions": ["ubuntu", "kubuntu"],
              "supported_versions": ["20.04", "22.04", "24.04"],
              "supported_version_ranges": [
                {
                  "min": "20.04",
                  "max": "30.99",
                  "type": "lts_and_interim",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "version_support_policy": {
                "forward_compatibility": true,
                "testing_requirement": "none_for_interim",
                "maintenance_schedule": "quarterly"
              },
              "repository_setup": [
                "wget -4 https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb",
                "sudo dpkg -i packages-microsoft-prod.deb",
                "rm packages-microsoft-prod.deb",
                "sudo apt-get update"
              ],
              "packages": ["powershell"],
              "post_install": [
                "sudo apt-get install -f"
              ]
            },
            "debian": {
              "version": "7.4.6",
              "distributions": ["debian"],
              "supported_versions": ["11", "12"],
              "supported_version_ranges": [
                {
                  "min": "11",
                  "max": "15",
                  "type": "stable_and_testing",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "repository_setup": [
                "wget -q https://packages.microsoft.com/config/debian/$(cat /etc/debian_version | cut -d'.' -f1)/packages-microsoft-prod.deb",
                "sudo dpkg -i packages-microsoft-prod.deb",
                "rm packages-microsoft-prod.deb",
                "sudo apt-get update"
              ],
              "packages": ["powershell"],
              "post_install": [
                "sudo apt-get install -f"
              ]
            },
            "fedora": {
              "version": "7.4.6",
              "distributions": ["fedora"],
              "supported_versions": ["39", "40", "41"],
              "supported_version_ranges": [
                {
                  "min": "39",
                  "max": "45",
                  "type": "stable_releases",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "repository_setup": [
                "sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc",
                "curl -o microsoft.repo https://packages.microsoft.com/config/fedora/$(rpm -E %fedora)/prod.repo",
                "sudo mv microsoft.repo /etc/yum.repos.d/microsoft.repo",
                "sudo dnf update"
              ],
              "packages": ["powershell"],
              "post_install": []
            },
            "rocky": {
              "version": "7.4.6",
              "distributions": ["rocky", "centos"],
              "supported_versions": ["8", "9"],
              "supported_version_ranges": [
                {
                  "min": "8",
                  "max": "10",
                  "type": "stable_releases",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "repository_setup": [
                "sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc",
                "curl -o microsoft.repo https://packages.microsoft.com/config/rhel/$(rpm -E %rhel)/prod.repo",
                "sudo mv microsoft.repo /etc/yum.repos.d/microsoft.repo",
                "sudo dnf update"
              ],
              "packages": ["powershell"],
              "post_install": []
            },
            "mint": {
              "version": "7.4.6",
              "distributions": ["mint"],
              "supported_versions": ["21", "22"],
              "supported_version_ranges": [
                {
                  "min": "21",
                  "max": "25",
                  "type": "lts_releases",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "repository_setup": [
                "wget -q https://packages.microsoft.com/config/ubuntu/$(cat /etc/upstream-release/lsb-release | grep DISTRIB_RELEASE | cut -d'=' -f2)/packages-microsoft-prod.deb",
                "sudo dpkg -i packages-microsoft-prod.deb",
                "rm packages-microsoft-prod.deb",
                "sudo apt-get update"
              ],
              "packages": ["powershell"],
              "post_install": [
                "sudo apt-get install -f"
              ]
            },
            "elementary": {
              "version": "7.4.6",
              "distributions": ["elementary"],
              "supported_versions": ["7", "8"],
              "supported_version_ranges": [
                {
                  "min": "7",
                  "max": "10",
                  "type": "lts_releases",
                  "confidence": "high"
                }
              ],
              "fallback_variants": ["snap"],
              "fallback_strategy": "auto_with_confirmation",
              "repository_setup": [
                "wget -q https://packages.microsoft.com/config/ubuntu/$(cat /etc/upstream-release/lsb-release | grep DISTRIB_RELEASE | cut -d'=' -f2)/packages-microsoft-prod.deb",
                "sudo dpkg -i packages-microsoft-prod.deb",
                "rm packages-microsoft-prod.deb",
                "sudo apt-get update"
              ],
              "packages": ["powershell"],
              "post_install": [
                "sudo apt-get install -f"
              ]
            },
            "snap": {
              "version": "latest",
              "distributions": ["universal"],
              "type": "snap",
              "packages": ["powershell"],
              "install_args": ["--classic"],
              "post_install": []
            }
          },
          "verification": {
            "command": "pwsh --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "latest"
    },
    "qemu": {
      "name": "QEMU/KVM",
      "description": "QEMU virtualization stack with KVM and libvirt support",
      "category": "virtualization",
      "platforms": {
        "linux": {
          "type": "apt",
          "variants": {
            "default": {
              "version": "latest",
              "distributions": {
                "apt": {
                  "packages": ["qemu-system-x86", "qemu-utils", "libvirt-daemon-system", "libvirt-clients", "virt-manager", "bridge-utils", "cpu-checker", "ovmf", "swtpm", "swtpm-tools", "spice-client-gtk", "virt-viewer"],
                  "post_install": [
                    "sudo usermod -a -G libvirt $USER",
                    "sudo usermod -a -G kvm $USER",
                    "sudo systemctl enable libvirtd",
                    "sudo systemctl start libvirtd"
                  ]
                },
                "dnf": {
                  "packages": ["qemu-kvm", "libvirt", "virt-manager", "virt-install", "bridge-utils", "edk2-ovmf", "swtpm", "swtpm-tools"],
                  "post_install": [
                    "sudo usermod -a -G libvirt $USER",
                    "sudo usermod -a -G kvm $USER", 
                    "sudo systemctl enable libvirtd",
                    "sudo systemctl start libvirtd"
                  ]
                },
                "yum": {
                  "packages": ["qemu-kvm", "libvirt", "virt-manager", "virt-install", "bridge-utils", "edk2-ovmf", "swtpm", "swtpm-tools"],
                  "post_install": [
                    "sudo usermod -a -G libvirt $USER",
                    "sudo usermod -a -G kvm $USER",
                    "sudo systemctl enable libvirtd", 
                    "sudo systemctl start libvirtd"
                  ]
                },
                "pacman": {
                  "packages": ["qemu-full", "libvirt", "virt-manager", "bridge-utils", "dnsmasq", "vde2", "ebtables", "edk2-ovmf", "swtpm"],
                  "post_install": [
                    "sudo usermod -a -G libvirt $USER",
                    "sudo usermod -a -G kvm $USER",
                    "sudo systemctl enable libvirtd.service",
                    "sudo systemctl start libvirtd.service"
                  ]
                },
                "zypper": {
                  "packages": ["qemu-kvm", "libvirt", "virt-manager", "bridge-utils", "qemu-ovmf-x86_64", "swtpm"],
                  "post_install": [
                    "sudo usermod -a -G libvirt $USER",
                    "sudo usermod -a -G kvm $USER",
                    "sudo systemctl enable libvirtd",
                    "sudo systemctl start libvirtd"
                  ]
                }
              }
            }
          },
          "verification": {
            "command": "qemu-system-x86_64 --version",
            "expected_exit_code": 0
          }
        }
      },
      "default_variant": "default"
    },
    "spice-guest-tools": {
      "name": "SPICE Guest Tools",
      "description": "SPICE guest tools for Windows VMs to enable clipboard sharing and enhanced display",
      "category": "virtualization",
      "platforms": {
        "windows": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "0.141",
              "url": "https://www.spice-space.org/download/windows/spice-guest-tools/spice-guest-tools-latest.exe",
              "description": "Download SPICE tools for mounting in Windows VM"
            }
          }
        }
      },
      "default_variant": "latest"
    },
    "act": {
      "name": "Act",
      "description": "Run GitHub Actions locally",
      "category": "development",
      "platforms": {
        "linux": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest", 
              "url": "https://github.com/nektos/act/releases/latest/download/act_Linux_x86_64.tar.gz",
              "extract": true,
              "binary": "act",
              "install_path": "/usr/local/bin",
              "requires_sudo": true
            }
          }
        },
        "windows": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest",
              "url": "https://github.com/nektos/act/releases/latest/download/act_Windows_x86_64.zip",
              "extract": true,
              "binary": "act.exe",
              "install_path": "C:\\Program Files\\Act",
              "requires_admin": true
            }
          }
        },
        "darwin": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest",
              "url": "https://github.com/nektos/act/releases/latest/download/act_Darwin_x86_64.tar.gz",
              "extract": true,
              "binary": "act",
              "install_path": "/usr/local/bin",
              "requires_sudo": true
            }
          }
        }
      },
      "default_variant": "latest",
      "post_install": [
        "act --version",
        "echo 'Act installed successfully. Docker is required to run workflows.'"
      ]
    },
    "actionlint": {
      "name": "Actionlint",
      "description": "Static checker for GitHub Actions workflow files",
      "category": "development",
      "platforms": {
        "linux": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest",
              "url": "https://github.com/rhysd/actionlint/releases/latest/download/actionlint_1.7.4_linux_amd64.tar.gz",
              "extract": true,
              "binary": "actionlint",
              "install_path": "/usr/local/bin",
              "requires_sudo": true
            }
          }
        },
        "windows": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest",
              "url": "https://github.com/rhysd/actionlint/releases/latest/download/actionlint_1.7.4_windows_amd64.zip",
              "extract": true,
              "binary": "actionlint.exe",
              "install_path": "C:\\Program Files\\Actionlint",
              "requires_admin": true
            }
          }
        },
        "darwin": {
          "type": "direct_download",
          "variants": {
            "latest": {
              "version": "latest",
              "url": "https://github.com/rhysd/actionlint/releases/latest/download/actionlint_1.7.4_darwin_amd64.tar.gz",
              "extract": true,
              "binary": "actionlint",
              "install_path": "/usr/local/bin",
              "requires_sudo": true
            }
          }
        }
      },
      "default_variant": "latest",
      "post_install": [
        "actionlint --version"
      ]
    },
    "gh": {
      "name": "GitHub CLI",
      "description": "GitHub's official command line tool",
      "category": "development",
      "platforms": {
        "linux": {
          "type": "apt",
          "variants": {
            "latest": {
              "version": "latest",
              "distributions": {
                "apt": {
                  "repository": "deb [arch=amd64 signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main",
                  "key_url": "https://cli.github.com/packages/githubcli-archive-keyring.gpg",
                  "packages": ["gh"]
                },
                "dnf": {
                  "repository": "https://cli.github.com/packages/rpm/gh-cli.repo",
                  "packages": ["gh"]
                }
              }
            }
          }
        },
        "windows": {
          "type": "winget",
          "variants": {
            "latest": {
              "version": "latest",
              "package_id": "GitHub.cli"
            }
          }
        },
        "darwin": {
          "type": "brew",
          "variants": {
            "latest": {
              "version": "latest",
              "formula": "gh"
            }
          }
        }
      },
      "default_variant": "latest",
      "post_install": [
        "gh --version"
      ]
    }
  },
  "presets": {
    "default": {
      "name": "Default Development Setup",
      "description": "Python embedded, Java 17, and VSCode",
      "packages": [
        {"name": "python", "variant": "embeddable"},
        {"name": "java", "variant": "17"},
        {"name": "vscode", "variant": "user"}
      ]
    },
    "minimal": {
      "name": "Minimal Setup",
      "description": "Just Python embedded",
      "packages": [
        {"name": "python", "variant": "embeddable"}
      ]
    },
    "full": {
      "name": "Full Development Setup", 
      "description": "All development tools",
      "packages": [
        {"name": "python", "variant": "full"},
        {"name": "java", "variant": "17"},
        {"name": "vscode", "variant": "user"},
        {"name": "go", "variant": "latest"}
      ]
    },
    "edge-minimal": {
      "name": "Minimal Edge Infrastructure",
      "description": "Basic edge infrastructure with Caddy and WireGuard",
      "packages": [
        {"name": "caddy", "variant": "latest"},
        {"name": "wireguard", "variant": "latest"}
      ]
    },
    "edge-secure": {
      "name": "Secure Edge Infrastructure",
      "description": "Complete edge infrastructure with security tools",
      "packages": [
        {"name": "caddy", "variant": "latest"},
        {"name": "wireguard", "variant": "latest"},
        {"name": "fail2ban", "variant": "default"},
        {"name": "ufw", "variant": "default"}
      ]
    },
    "plugin-dev": {
      "name": "Plugin Development Environment",
      "description": "Complete toolchain for Portunix plugin development",
      "packages": [
        {"name": "go", "variant": "latest"},
        {"name": "protoc", "variant": "latest"},
        {"name": "vscode", "variant": "stable"}
      ]
    },
    "github-actions": {
      "name": "GitHub Actions Development",
      "description": "Tools for local GitHub Actions development and testing",
      "packages": [
        {"name": "act", "variant": "latest"},
        {"name": "gh", "variant": "latest"},
        {"name": "actionlint", "variant": "latest"}
      ]
    }
  }
}